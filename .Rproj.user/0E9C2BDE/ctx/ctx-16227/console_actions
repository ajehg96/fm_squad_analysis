{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "> ",
        "library(data.table)",
        "> ",
        "library(rlist)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(XML)",
        "> ",
        "library(plyr)",
        "> ",
        "",
        "> ",
        "role_attributes <- fread(\"data/role_attributes.csv\", na.strings=c(\"\", \"#NA\")) %>%",
        "+ ",
        "  type.convert(as.is = TRUE)",
        "> ",
        "",
        "> ",
        "squad <- htmlParse(\"data/squad.html\", encoding = \"UTF-8\")",
        "> ",
        "squad <- readHTMLTable(squad) %>%",
        "+ ",
        "  as.data.frame() %>%",
        "+ ",
        "  select(\"name\" = \"NULL.Name\", \"age\" = \"NULL.Age\", \"height\" = \"NULL.Height\", \"position\" = \"NULL.Position\",",
        "+ ",
        "         \"foot_right\" = \"NULL.Right.Foot\", \"foot_left\" = \"NULL.Left.Foot\", \"att_cor\" = \"NULL.Cor\",",
        "+ ",
        "         \"att_cro\" = \"NULL.Cro\", \"att_dri\" = \"NULL.Dri\", \"att_fin\" = \"NULL.Fin\", \"att_fir\" = \"NULL.Fir\",",
        "+ ",
        "         \"att_fre\" = \"NULL.Fre\", \"att_hea\" = \"NULL.Hea\", \"att_lon\" = \"NULL.Lon\", \"att_lth\" = \"NULL.L.Th\",",
        "+ ",
        "         \"att_mar\" = \"NULL.Mar\", \"att_pas\" = \"NULL.Pas\", \"att_pen\" = \"NULL.Pen\", \"att_tck\" = \"NULL.Tck\",",
        "+ ",
        "         \"att_tec\" = \"NULL.Tec\", \"att_agg\" = \"NULL.Agg\", \"att_ant\" = \"NULL.Ant\", \"att_bra\" = \"NULL.Bra\",",
        "+ ",
        "         \"att_cmp\" = \"NULL.Cmp\", \"att_cnt\" = \"NULL.Cnt\", \"att_dec\" = \"NULL.Dec\", \"att_det\" = \"NULL.Det\",",
        "+ ",
        "         \"att_fla\" = \"NULL.Fla\", \"att_ldr\" = \"NULL.Ldr\", \"att_otb\" = \"NULL.OtB\", \"att_pos\" = \"NULL.Pos\",",
        "+ ",
        "         \"att_tea\" = \"NULL.Tea\", \"att_vis\" = \"NULL.Vis\", \"att_wor\" = \"NULL.Wor\", \"att_acc\" = \"NULL.Acc\",",
        "+ ",
        "         \"att_agi\" = \"NULL.Agi\", \"att_bal\" = \"NULL.Bal\", \"att_jum\" = \"NULL.Jum\", \"att_nat\" = \"NULL.Nat\",",
        "+ ",
        "         \"att_pac\" = \"NULL.Pac\", \"att_sta\" = \"NULL.Sta\", \"att_str\" = \"NULL.Str\", \"att_aer\" = \"NULL.Aer\",",
        "+ ",
        "         \"att_cmd\" = \"NULL.Cmd\", \"att_com\" = \"NULL.Com\", \"att_ecc\" = \"NULL.Ecc\", \"att_han\" = \"NULL.Han\",",
        "+ ",
        "         \"att_kic\" = \"NULL.Kic\", \"att_1v1\" = \"NULL.1v1\", \"att_pun\" = \"NULL.Pun\", \"att_ref\" = \"NULL.Ref\",",
        "+ ",
        "         \"att_tro\" = \"NULL.TRO\", \"att_thr\" = \"NULL.Thr\")",
        "> ",
        "",
        "> ",
        "squad$height <- str_remove(squad$height, \" cm\")",
        "> ",
        "",
        "> ",
        "positions <- c(\"GK\", \"D\", \"WB\", \"DM\", \"M\", \"AM\", \"ST\")",
        "> ",
        "sides <- c(\"R\", \"C\", \"L\")",
        "> ",
        "",
        "> ",
        "for (i in 1:nrow(squad)) {",
        "+ ",
        "  ",
        "+ ",
        "  x <- squad$position[i]",
        "+ ",
        "  ",
        "+ ",
        "  x <- str_replace_all(x, \"/\", \",\")",
        "+ ",
        "  x <- str_replace_all(x, \" \", \"\")",
        "+ ",
        "  x <- str_replace_all(x, \",\", \" \")",
        "+ ",
        "  x <- sub(\"([A-Z])([(])\", \"\\\\1 \\\\2\", x)",
        "+ ",
        "  x <- sub(\"([A-Z])([(])\", \"\\\\1 \\\\2\", x)",
        "+ ",
        "  x <- sub(\"([A-Z])([(])\", \"\\\\1 \\\\2\", x)",
        "+ ",
        "  x <- paste0(\" \", x, \" \")",
        "+ ",
        "  ",
        "+ ",
        "  position.positions <- list(gk = FALSE, d = FALSE, wb = FALSE, dm = FALSE, m = FALSE, am = FALSE, st = FALSE)",
        "+ ",
        "  ",
        "+ ",
        "  for (j in 1:length(positions)) {",
        "+ ",
        "    ",
        "+ ",
        "    y <- paste0(\" \", positions[j], \" \")",
        "+ ",
        "    ",
        "+ ",
        "    if (grepl(y, x)) {",
        "+ ",
        "      ",
        "+ ",
        "      position.positions[j] <- TRUE",
        "+ ",
        "      ",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  squad$position.positions[i] <- list(position.positions)",
        "+ ",
        "  ",
        "+ ",
        "  rm(i, j, x, y, position.positions)",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "for (i in 1:nrow(squad)) {",
        "+ ",
        "  ",
        "+ ",
        "  squad$goal_keeper[i] = squad$position.positions[[i]]$gk",
        "+ ",
        "  squad$central_defender[i] = squad$position.positions[[i]]$d",
        "+ ",
        "  squad$wing_back[i] = squad$position.positions[[i]]$wb",
        "+ ",
        "  squad$defensive_midfielder[i] = squad$position.positions[[i]]$dm",
        "+ ",
        "  squad$central_midfielder[i] = squad$position.positions[[i]]$m",
        "+ ",
        "  squad$attacking_midfielder[i] = squad$position.positions[[i]]$am",
        "+ ",
        "  squad$striker[i] = squad$position.positions[[i]]$st",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "rm(positions, sides, i)",
        "> ",
        "",
        "> ",
        "squad$foot_right <- squad$foot_right %>%",
        "+ ",
        "  mapvalues(from = c(\"Very Weak\", \"Weak\", \"Reasonable\", \"Fairly Strong\", \"Strong\", \"Very Strong\"),",
        "+ ",
        "            to = c(1, 2, 3, 4, 5, 6))",
        "The following `from` values were not present in `x`: Very Weak, Strong\n",
        "> ",
        "",
        "> ",
        "squad$foot_left <-  squad$foot_left %>%",
        "+ ",
        "  mapvalues(from = c(\"Very Weak\", \"Weak\", \"Reasonable\", \"Fairly Strong\", \"Strong\", \"Very Strong\"),",
        "+ ",
        "            to = c(1, 2, 3, 4, 5, 6))",
        "> ",
        "",
        "> ",
        "squad <- squad %>%",
        "+ ",
        "  select(\"name\", \"age\", \"height\", \"goal_keeper\", \"central_defender\", \"wing_back\", \"defensive_midfielder\",",
        "+ ",
        "         \"central_midfielder\", \"attacking_midfielder\", \"striker\", \"foot_right\", \"foot_left\",",
        "+ ",
        "         \"att_cor\", \"att_cro\", \"att_dri\", \"att_fin\", \"att_fir\", \"att_fre\", \"att_hea\", \"att_lon\",",
        "+ ",
        "         \"att_lth\", \"att_mar\", \"att_pas\", \"att_pen\", \"att_tck\", \"att_tec\", \"att_agg\", \"att_ant\",",
        "+ ",
        "         \"att_bra\", \"att_cmp\", \"att_cnt\", \"att_dec\", \"att_det\", \"att_fla\", \"att_ldr\", \"att_otb\",",
        "+ ",
        "         \"att_pos\", \"att_tea\", \"att_vis\", \"att_wor\", \"att_acc\", \"att_agi\", \"att_bal\", \"att_jum\",",
        "+ ",
        "         \"att_nat\", \"att_pac\", \"att_sta\", \"att_str\", \"att_aer\", \"att_cmd\", \"att_com\", \"att_ecc\",",
        "+ ",
        "         \"att_han\", \"att_kic\", \"att_1v1\", \"att_pun\", \"att_ref\", \"att_tro\", \"att_thr\") %>%",
        "+ ",
        "  type.convert(as.is = TRUE) %>%",
        "+ ",
        "  dplyr::arrange(name)",
        "> ",
        "",
        "> ",
        "roles <- matrix(nrow = nrow(squad), ncol = nrow(role_attributes) + 1) %>%",
        "+ ",
        "  as.data.frame()",
        "> ",
        "roles[, 1] <- squad$name",
        "> ",
        "",
        "> ",
        "df <- c(paste(role_attributes$position, role_attributes$role, role_attributes$mentality, role_attributes$side, sep = \"-\"))",
        "> ",
        "df <- c(\"name\", df)",
        "> ",
        "colnames(roles) <- df",
        "> ",
        "",
        "> ",
        "for (i in 1:nrow(squad)) {",
        "+ ",
        "  ",
        "+ ",
        "  m <- as.numeric(squad[i, 13:59])",
        "+ ",
        "  ",
        "+ ",
        "  for (j in 1:nrow(role_attributes)) {",
        "+ ",
        "    ",
        "+ ",
        "    n <- as.numeric(role_attributes[j, 5:51])",
        "+ ",
        "    ",
        "+ ",
        "    roles[i, (j + 1)] <- round(as.numeric(sum(m * n) / sum(n)), 2)",
        "+ ",
        "    ",
        "+ ",
        "    # if (str_extract(colnames(roles[(j + 1)]), \"^[^-]*\") == \"goal_keeper\" & squad[i, 4] == FALSE) {",
        "+ ",
        "    #   ",
        "+ ",
        "    #   roles[i, (j + 1)] <- 0",
        "+ ",
        "    #   ",
        "+ ",
        "    # }",
        "+ ",
        "    # ",
        "+ ",
        "    # if (str_extract(colnames(roles[(j + 1)]), \"^[^-]*\") == \"central_defender\" & squad[i, 5] == FALSE) {",
        "+ ",
        "    #   ",
        "+ ",
        "    #   roles[i, (j + 1)] <- 0",
        "+ ",
        "    #   ",
        "+ ",
        "    # }",
        "+ ",
        "    # ",
        "+ ",
        "    # if (str_extract(colnames(roles[(j + 1)]), \"^[^-]*\") == \"wing_back\" & squad[i, 6] == FALSE) {",
        "+ ",
        "    #   ",
        "+ ",
        "    #   roles[i, (j + 1)] <- 0",
        "+ ",
        "    #   ",
        "+ ",
        "    # }",
        "+ ",
        "    # ",
        "+ ",
        "    # if (str_extract(colnames(roles[(j + 1)]), \"^[^-]*\") == \"defensive_midfielder\" & squad[i, 7] == FALSE) {",
        "+ ",
        "    #   ",
        "+ ",
        "    #   roles[i, (j + 1)] <- 0",
        "+ ",
        "    #   ",
        "+ ",
        "    # }",
        "+ ",
        "    # ",
        "+ ",
        "    # if (str_extract(colnames(roles[(j + 1)]), \"^[^-]*\") == \"central_midfielder\" & squad[i, 8] == FALSE) {",
        "+ ",
        "    #   ",
        "+ ",
        "    #   roles[i, (j + 1)] <- 0",
        "+ ",
        "    #   ",
        "+ ",
        "    # }",
        "+ ",
        "    # ",
        "+ ",
        "    # if (str_extract(colnames(roles[(j + 1)]), \"^[^-]*\") == \"attacking_midfielder\" & squad[i, 9] == FALSE) {",
        "+ ",
        "    #   ",
        "+ ",
        "    #   roles[i, (j + 1)] <- 0",
        "+ ",
        "    #   ",
        "+ ",
        "    # }",
        "+ ",
        "    # ",
        "+ ",
        "    # if (str_extract(colnames(roles[(j + 1)]), \"^[^-]*\") == \"striker\" & squad[i, 10] == FALSE) {",
        "+ ",
        "    #   ",
        "+ ",
        "    #   roles[i, (j + 1)] <- 0",
        "+ ",
        "    #   ",
        "+ ",
        "    # }",
        "+ ",
        "",
        "+ ",
        "    if ((str_extract(colnames(roles[(j + 1)]), \"[^-]+$\") == \"right\" | str_extract(colnames(roles[(j + 1)]), \"[^-]+$\") == \"left_inverted\") & squad[i, 11] %in% c(0, 1, 2, 3, 4)) {",
        "+ ",
        "",
        "+ ",
        "      roles[i, (j + 1)] <- 0",
        "+ ",
        "",
        "+ ",
        "    }",
        "+ ",
        "",
        "+ ",
        "    if ((str_extract(colnames(roles[(j + 1)]), \"[^-]+$\") == \"left\" | str_extract(colnames(roles[(j + 1)]), \"[^-]+$\") == \"right_inverted\") & squad[i, 12] %in% c(0, 1, 2, 3, 4)) {",
        "+ ",
        "",
        "+ ",
        "      roles[i, (j + 1)] <- 0",
        "+ ",
        "",
        "+ ",
        "    }",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "tactic <- c(\"goal_keeper-sweeper_keeper-defend-centre-1\", \"central_defender-ball_playing_defender-defend-centre-1\",",
        "+ ",
        "            \"central_defender-ball_playing_defender-defend-centre-2\", \"full_back-wing_back-support-right-1\",",
        "+ ",
        "            \"full_back-wing_back-support-left-1\", \"defensive_midfielder-segundo_volante-support-centre-1\", \"defensive_midfielder-defensive_midfielder-support-centre-1\",",
        "+ ",
        "            \"winger-inside_forward-attack-right_inverted-1\", \"winger-inverted_winger-attack-left_inverted-1\",",
        "+ ",
        "            \"attacking_midfielder-shadow_striker-attack-centre-1\", \"striker-advanced_forward-attack-centre-1\")",
        "> ",
        "",
        "> ",
        "# roles <- roles %>%",
        "> ",
        "#   select(\"name\", all_of(str_extract(tactic, \"^.*[-].*(?=-)\")))",
        "> ",
        "",
        "> ",
        "team <- matrix(nrow = 15, ncol = 11) %>% as.data.frame()",
        "> ",
        "colnames(team) <- tactic",
        "> ",
        "",
        "> ",
        "for (i in 1:ncol(team)) {",
        "+ ",
        "  ",
        "+ ",
        "  team[i] <- roles %>%",
        "+ ",
        "    arrange(desc(.[[grep(str_extract(colnames(team)[i], \"^.*[-].*(?=-)\"), colnames(roles))]])) %>% ",
        "+ ",
        "    head(n = 15) %>%",
        "+ ",
        "    select(name)",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "temp <- expand.grid(head(team$`goal_keeper-sweeper_keeper-defend-centre-1`, 5),",
        "+ ",
        "                    head(team$`central_defender-ball_playing_defender-defend-centre-1`, 10),",
        "+ ",
        "                    head(team$`central_defender-ball_playing_defender-defend-centre-2`, 10),",
        "+ ",
        "                    head(team$`full_back-wing_back-support-right-1`, 5),",
        "+ ",
        "                    head(team$`full_back-wing_back-support-left-1`, 5),",
        "+ ",
        "                    head(team$`defensive_midfielder-segundo_volante-support-centre-1`, 10),",
        "+ ",
        "                    head(team$`defensive_midfielder-defensive_midfielder-support-centre-1`, 10),",
        "+ ",
        "                    head(team$`winger-inside_forward-attack-right_inverted-1`, 5),",
        "+ ",
        "                    head(team$`winger-inverted_winger-attack-left_inverted-1`, 5),",
        "+ ",
        "                    head(team$`attacking_midfielder-shadow_striker-attack-centre-1`, 5),",
        "+ ",
        "                    head(team$`striker-advanced_forward-attack-centre-1`, 5))",
        "Error: cannot allocate vector of size 2.9 Gb\n",
        "> ",
        "View(roles)",
        "> ",
        "View(team)",
        "> ",
        "temp <- expand.grid(head(team$`goal_keeper-sweeper_keeper-defend-centre-1`, 2),",
        "+ ",
        "                    head(team$`central_defender-ball_playing_defender-defend-centre-1`, 10),",
        "+ ",
        "                    head(team$`central_defender-ball_playing_defender-defend-centre-2`, 10),",
        "+ ",
        "                    head(team$`full_back-wing_back-support-right-1`, 5),",
        "+ ",
        "                    head(team$`full_back-wing_back-support-left-1`, 5),",
        "+ ",
        "                    head(team$`defensive_midfielder-segundo_volante-support-centre-1`, 10),",
        "+ ",
        "                    head(team$`defensive_midfielder-defensive_midfielder-support-centre-1`, 10),",
        "+ ",
        "                    head(team$`winger-inside_forward-attack-right_inverted-1`, 5),",
        "+ ",
        "                    head(team$`winger-inverted_winger-attack-left_inverted-1`, 5),",
        "+ ",
        "                    head(team$`attacking_midfielder-shadow_striker-attack-centre-1`, 5),",
        "+ ",
        "                    head(team$`striker-advanced_forward-attack-centre-1`, 5))",
        "Error: cannot allocate vector of size 1.2 Gb\n",
        "> ",
        "gc()",
        "             used    (Mb) gc trigger    (Mb)   max used    (Mb)\nNcells    1598815    85.4    3032291   162.0    3032291   162.0\nVcells 4300217421 32808.1 8746991536 66734.3 5712718058 43584.6\n",
        "> ",
        "temp <- expand.grid(head(team$`goal_keeper-sweeper_keeper-defend-centre-1`, 2),",
        "+ ",
        "                    head(team$`central_defender-ball_playing_defender-defend-centre-1`, 10),",
        "+ ",
        "                    head(team$`central_defender-ball_playing_defender-defend-centre-2`, 10),",
        "+ ",
        "                    head(team$`full_back-wing_back-support-right-1`, 5),",
        "+ ",
        "                    head(team$`full_back-wing_back-support-left-1`, 5),",
        "+ ",
        "                    head(team$`defensive_midfielder-segundo_volante-support-centre-1`, 10),",
        "+ ",
        "                    head(team$`defensive_midfielder-defensive_midfielder-support-centre-1`, 10),",
        "+ ",
        "                    head(team$`winger-inside_forward-attack-right_inverted-1`, 5),",
        "+ ",
        "                    head(team$`winger-inverted_winger-attack-left_inverted-1`, 5),",
        "+ ",
        "                    head(team$`attacking_midfielder-shadow_striker-attack-centre-1`, 5),",
        "+ ",
        "                    head(team$`striker-advanced_forward-attack-centre-1`, 5))",
        "Error: cannot allocate vector of size 1.2 Gb\n",
        "\nRestarting R session...\n\n"
    ]
}